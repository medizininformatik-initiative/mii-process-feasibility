user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include     /etc/nginx/mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Check if a X-Forwarded-Proto header (set by reverse-proxy) is already present. If not take the scheme used to call our nginx server.
    map $http_x_forwarded_proto $x_forwarded_proto {
        default $http_x_forwarded_proto;
        ""      $scheme; # Note that if the reverse-proxy does not add a X-Forwarded-Proto header, it may be incorrect if the protocol used by the reverse proxy is not the same as the one on which your nginx server is listening. In this case you have no solution than harcode the correct value.
    }

    # Check if a X-Forwarded-Host header (set by reverse-proxy) is already present. If not take the value of the 'Host' header.
    map $http_x_forwarded_host $x_forwarded_host {
        default $http_x_forwarded_host;
        ""      $http_host;
    }

    # Set the default port of each scheme/protocol (80 for http, 443 for https)
    map $x_forwarded_proto $default_http_port {
        default 80;
        "https" 443;
    }

    # Extract the real port of the client request url (unfortunatly nginx has no variable to get this info)
    map $http_host $request_port {
        default                 $default_http_port; # If port not explicitely defined in url take the default one associated to the calling scheme/protocol (80 for http, 443 for https)
        "~^[^\:]+:(?<p>\d+)$"   $p;
    }

    # Check if a X-Forwarded-Port header (set by reverse-proxy) is already present. If not take the port from the client request url
    map $http_x_forwarded_port $x_forwarded_port {
        default $http_x_forwarded_port;
        ""      $request_port;
    }

    include /etc/nginx/conf.d/*.conf;
}
